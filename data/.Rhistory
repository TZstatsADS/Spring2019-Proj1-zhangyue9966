ggplot(ds1,aes(velocities)) + geom_histogram(binwidth = 1000,color="black", fill="grey")
#boxplot
ggplot(ds1,aes(x = "",y = velocities)) + geom_boxplot()
#density estimate
ggplot(ds1,aes(velocities)) + geom_density()
#boxplot
ggplot(ds1,aes(x = "",y = velocities)) + geom_boxplot()
library(MASS)
library(ggplot2)
library(grid)
library(gridExtra)
ds1 <- data.frame(velocities = galaxies)
# histogram
ggplot(ds1,aes(velocities)) +
geom_histogram(binwidth = 1000,color="black", fill="grey") +
ggtitle("Histogram of Galaxies Velocities")
#boxplot
ggplot(ds1,aes(x = "",y = velocities)) +
geom_boxplot()  +
ggtitle("Boxplot of Galaxies")
#density estimate
ggplot(ds1,aes(velocities)) +
geom_density() +
ggtitle("Density Plot of Galaxies Velocities")
# histogram
ggplot(ds1,aes(velocities)) +
geom_histogram(binwidth = 1000,color="black", fill="grey") +
ggtitle("Histogram of Galaxies Velocities") +
theme(plot.title = element_text(hjust = 1,face = "bold"),legend.position="none")
# histogram
ggplot(ds1,aes(velocities)) +
geom_histogram(binwidth = 1000,color="black", fill="grey") +
ggtitle("Histogram of Galaxies Velocities") +
theme(plot.title = element_text(hjust = 0.5))
#boxplot
ggplot(ds1,aes(x = "",y = velocities)) +
geom_boxplot()  +
ggtitle("Boxplot of Galaxies") +
theme(plot.title = element_text(hjust = 0.5))
library(MASS)
library(ggplot2)
library(grid)
library(gridExtra)
ds1 <- data.frame(velocities = galaxies)
# histogram
ggplot(ds1,aes(velocities)) +
geom_histogram(binwidth = 1000,color="black", fill="grey") +
ggtitle("Histogram of Galaxies Velocities") +
theme(plot.title = element_text(hjust = 0.5))
#boxplot
ggplot(ds1,aes(x = "",y = velocities)) +
geom_boxplot()  +
ggtitle("Boxplot of Galaxies") +
theme(plot.title = element_text(hjust = 0.5))
#density estimate
ggplot(ds1,aes(velocities)) +
geom_density() +
ggtitle("Density Plot of Galaxies Velocities") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_density(bandwidth = 100) +
ggtitle("") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_density(bandwidth = 100) +
ggtitle("density plot of Galaxies Velocities with bandwith 100") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_density(bandwidth = 200) +
ggtitle("density plot of Galaxies Velocities with bandwith 100") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_density(bandwidth = 10) +
ggtitle("density plot of Galaxies Velocities with bandwith 100") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_density(bandwidth = 5) +
ggtitle("density plot of Galaxies Velocities with bandwith 100") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_density(bandwidth = 100000) +
ggtitle("density plot of Galaxies Velocities with bandwith 100") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_density(bw = 100) +
ggtitle("density plot of Galaxies Velocities with bandwith 100") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_density(bandwidth = 50) +
ggtitle("density plot of Galaxies Velocities with bandwith 100") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_density(bw = 20) +
ggtitle("density plot of Galaxies Velocities with bandwith 100") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_density(bw = 1000) +
ggtitle("density plot of Galaxies Velocities with bandwith 100") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_density(bw = 500) +
ggtitle("density plot of Galaxies Velocities with bandwith 100") +
theme(plot.title = element_text(hjust = 0.5))
# density plot with bandwith 100
ggplot(ds1,aes(velocities)) +
geom_density(bw = 100) +
ggtitle("density plot of Galaxies Velocities with bandwith 100") +
theme(plot.title = element_text(hjust = 0.5))
# density plot with bandwith 500
ggplot(ds1,aes(velocities)) +
geom_density(bw = 500) +
ggtitle("density plot of Galaxies Velocities with bandwith 500") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_histogram(binwidth = 100,color="black", fill="grey") +
ggtitle("Histogram of Galaxies Velocities") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_histogram(binwidth = 500,color="black", fill="grey") +
ggtitle("Histogram of Galaxies Velocities") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_histogram(binwidth = 300,color="black", fill="grey") +
ggtitle("Histogram of Galaxies Velocities") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_histogram(binwidth = 200,color="black", fill="grey") +
ggtitle("Histogram of Galaxies Velocities with binwidth 200") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_histogram(binwidth = 500,color="black", fill="grey") +
ggtitle("Histogram of Galaxies Velocities with binwidth 500") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_histogram(binwidth = 800,color="black", fill="grey") +
ggtitle("Histogram of Galaxies Velocities with binwidth 800") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_histogram(binwidth = 1000,color="black", fill="grey") +
ggtitle("Histogram of Galaxies Velocities with binwidth 800") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_histogram(binwidth = 500,color="black", fill="grey") +
ggtitle("Histogram of Galaxies Velocities with binwidth 800") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ds1,aes(velocities)) +
geom_histogram(binwidth = 800,color="black", fill="grey") +
ggtitle("Histogram of Galaxies Velocities with binwidth 800") +
theme(plot.title = element_text(hjust = 0.5))
zuni_ord[1:20]
boxplot(zuni)
boxplot(zuni$Revenue)
hist(ds4_new$Base.Salary,breaks = 10,xlab = "Base Salary",main = "Histogram of Base Salary")
hist(ds4_new$Base.Salary,breaks = 10,xlab = "Base Salary",main = "Histogram of Base Salary")
ggplot(df4, aes(x = Base.Salary, y = reorder(Agency.Name,Base.Salary,median))) +
geom_density_ridges() +
labs(y = "") +
ggtitle("Top 10 Agency according to median base salary") +
theme(plot.title = element_text(hjust = 0.5))
library("qdap")
library("rJava")
install.packages("rJava")
library("rJava")
library("qdap")
# You may need to run
# sudo ln -f -s $(/usr/libexec/java_home)/jre/lib/server/libjvm.dylib /usr/local/lib
# in order to load qdap
library("qdap")
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
View(inaug.list)
nomin.list=read.csv("../data/nominlist.csv", stringsAsFactors = FALSE)
farewell.list=read.csv("../data/farewelllist.csv", stringsAsFactors = FALSE)
### Inauguaral speeches
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
# load packages
library("rvest")
library("tibble")
### Inauguaral speeches
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
#head(inaug)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#### Nomination speeches
main.page=read_html("http://www.presidency.ucsb.edu/nomination.php")
#### Nomination speeches
main.page=read_html(x = "http://www.presidency.ucsb.edu/nomination.php")
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
### Inauguaral speeches
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
#head(inaug)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#### Nomination speeches
main.page=read_html(x = "http://www.presidency.ucsb.edu/nomination.php")
# Get link URLs
nomin <- f.speechlinks(main.page)
install.packages(""qdap"")
install.packages("qdap")
system("java -version")
system("java -version")
library(qdap)
library(rJava)
sudo R CMD javareconf
library(rJava)
library(qdap)
install.packages("qdap")
library(qdap)
library(devtools)
install_github("qdapDictionaries", "trinker")
install_github("qdapRegex", "trinker")
install_github("qdapTools", "trinker")
install_github("qdap", "trinker")
install.packages("devtools")
install.packages("devtools")
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh(
"trinker/qdapDictionaries",
"trinker/qdapRegex",
"trinker/qdapTools",
"trinker/qdap"
)
library(rjava)
install.packages("rjava")
install.packages("rJava")
library(rJava)
install.packages("qdap", INSTALL_opts = "--no-multiarch")
library(qdap)
library(rJava)
install.packages('rJava', repos='http://www.rforge.net/')
library(rJava)
install.packages("rJava",,"http://rforge.net/",type="source")
library(rJava)
> .jinit()
> .jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
library("rJava")
install.packages("qdap")
library(qdap)
library(tidyverse)
library(tidytext)
library(DT)
install.packages("DT")
install.packages("scales")
install.packages("scales")
install.packages("wordcloud2")
install.packages("gridExtra")
install.packages("gridExtra")
install.packages("ngram")
install.packages("SHINY")
install.packages("shiny")
library(tidyverse)
library(tidytext)
library(DT)
library(scales)
library(wordcloud2)
library(gridExtra)
library(ngram)
library(shiny)
hm_data <- read_csv("../output/processed_moments.csv")
setwd("~/Documents/GitHub/Spring2019-Proj1-zhangyue9966/data")
knitr::opts_chunk$set(echo = TRUE)
ds_main <- read.csv("cleaned_hm.csv")
setwd("~/Documents/GitHub/Spring2019-Proj1-zhangyue9966/data")
ds_main <- read.csv("cleaned_hm.csv")
ds_de <- read.csv("demographic.csv")
head(ds_main)
head(ds_de)
rm(cancer)
rm(Prostate)
rm(noise)
rm(x)
rm(y)
unique(ds_main$predicted_category)
library(dplyr)
library(tidyr)
ds1 <- ds_main %>%
select(wid,cleaned_hm,num_sentence,ground_truth_category,predicted_category)
ds1 <- left_join(ds1,ds_de)
head(ds1)
sum(gender==NaN)
sum(ds1$gender==NaN)
sum(ds1$gender==NA)
sum(is.na(ds1$gender))
nrow(ds_main)
nrow(ds_de)
View(ds1)
str(ds1)
ggplot(ds1, aes(x = predicted_category, fill = gender)) +
geom_histogram(position = "identity", bins = 20, show.legend = FALSE) +
facet_wrap(~gender, ncol = 1)
ggplot(ds1, aes(x = predicted_category, fill = gender)) +
geom_histogram(position = "identity",stat="count", bins = 20, show.legend = FALSE) +
facet_wrap(~gender, ncol = 1)
ggplot(ds1, aes(x = predicted_category, fill = gender)) +
geom_histogram(stat="count", bins = 20, show.legend = FALSE) +
facet_wrap(~gender, ncol = 1)
ds1[ds1==""]<-NA
ggplot(ds1, aes(x = predicted_category, fill = gender)) +
geom_histogram(stat="count", bins = 20, show.legend = FALSE) +
facet_wrap(~gender, ncol = 1)
str(ds1)
ds1 <- ds_main %>%
select(wid,cleaned_hm,num_sentence,ground_truth_category,predicted_category)
ds1 <- full_join(ds1,ds_de)
str(ds1)
ds_main <- read.csv("cleaned_hm.csv",stringsAsFactors = FALSE)
setwd("~/Documents/GitHub/Spring2019-Proj1-zhangyue9966/data")
ds_main <- read.csv("cleaned_hm.csv",stringsAsFactors = FALSE)
ds_de <- read.csv("demographic.csv",stringsAsFactors = FALSE)
head(ds_main)
head(ds_de)
library(dplyr)
library(tidyr)
ds1 <- ds_main %>%
select(wid,cleaned_hm,num_sentence,ground_truth_category,predicted_category)
ds1 <- full_join(ds1,ds_de)
str(ds1)
as.factor(ds1$parenthood)
as.factor(ds1$marital)
ds1 <- ds_main %>%
select(wid,cleaned_hm,num_sentence,ground_truth_category,predicted_category)
str(ds1)
ds1 <- full_join(ds1,ds_de)
str(ds_de)
str(ds1)
ds1 <- ds_main %>%
select(wid,cleaned_hm,num_sentence,ground_truth_category,predicted_category)
ds1 <- full_join(ds1,ds_de)
ds1$marital <- as.factor(ds1$marital)
ds1$ground_truth_category <- as.factor(ds1$ground_truth_category)
ds1$age <- as.factor(ds1$age)
str(ds1)
ds1$country <- as.factor(ds1$country)
ds1$gender <- as.factor(ds1$gender)
ds1$parenthood <- as.factor(ds1$parenthood)
str(ds1)
str(ds_main)
ds_main <- read.csv("cleaned_hm.csv")
setwd("~/Documents/GitHub/Spring2019-Proj1-zhangyue9966/data")
ds_main <- read.csv("cleaned_hm.csv")
ds_de <- read.csv("demographic.csv")
head(ds_main)
head(ds_de)
str(ds_main)
str(ds_main$predicted_category)
levels(ds_main$predicted_category)
ds1 <- ds_main %>%
select(wid,predicted_category)
str(ds1)
str(ds_de)
ds_de[1:100]
ds_de$country[1:100]
View(ds_de)
as.factor("a","b",NA)
as.factor(c("a","b",NA))
ds_de <- read.csv("demographic.csv",na.strings=c(""))
setwd("~/Documents/GitHub/Spring2019-Proj1-zhangyue9966/data")
ds_main <- read.csv("cleaned_hm.csv")
ds_de <- read.csv("demographic.csv",na.strings=c(""))
head(ds_main)
head(ds_de)
str(ds_de)
library(dplyr)
library(tidyr)
ds1 <- ds_main %>%
select(wid,predicted_category)
ds1 <- full_join(ds1,ds_de)
str(ds1)
# ds1 %>%
#   arrange(predicted_category) %>%
#   ggplot(aes(x=predicted_category, y=predicted_category)) +
#     geom_segment(aes(xend=name, yend=0)) +
#     geom_point(size=4, color="orange") +
#     coord_flip() +
#     theme_bw()
ggplot(ds1, aes(x = predicted_category, fill = ma)) +
geom_histogram(stat="count", bins = 20, show.legend = FALSE) +
facet_wrap(~gender, ncol = 1)
ggplot(ds1, aes(x = predicted_category, fill = gender)) +
geom_histogram(stat="count", bins = 20, show.legend = FALSE) +
facet_wrap(~gender, ncol = 1)
View(ds_main)
View(ds_de)
ds_main[ds_main$wid == 80,]
ds_main[ds_main$wid == 80,1]
ds_main[ds_main$wid == 80,][1:10]
head(ds_main[ds_main$wid == 80,])
ggplot(ds1, aes(x = predicted_category, fill = gender,na.rm = TRUE)) +
geom_histogram(stat="count", bins = 5) +
facet_wrap(~gender, ncol = 1)
ggplot(ds1, aes(x = predicted_category, fill = gender)) +
geom_histogram(stat="count", bins = 5, na.rm = TRUE) +
facet_wrap(~gender, ncol = 1)
ds1 %>%
filter(!is.na(gender)) %>%
ggplot(aes(x= predicted_category, fill=gender)) +
geom_bar(stat="bin")
ds1 %>%
filter(!is.na(gender)) %>%
ggplot(aes(x= predicted_category, fill=gender)) +
geom_bar(stat="count")
ds1 %>%
filter(!is.na(gender),!is.na(predicted_category)) %>%
ggplot(aes(x= predicted_category, fill=gender)) +
geom_bar(stat="count")
ds1 %>%
filter(!is.na(gender),!is.na(predicted_category)) %>%
ggplot(aes(x= predicted_category, fill=gender)) +
geom_bar(stat="count") +
ggtitle(title = "aaa")
ds1 %>%
filter(!is.na(gender),!is.na(predicted_category)) %>%
ggplot(aes(x= predicted_category, fill=gender)) +
geom_bar(stat="count") +
ggtitle(main = "aaa")
ds1 %>%
filter(!is.na(gender),!is.na(predicted_category)) %>%
ggplot(aes(x= predicted_category, fill=gender)) +
geom_bar(stat="count") +
labels(main = "aaa")
ds1 %>%
filter(!is.na(gender),!is.na(predicted_category)) %>%
ggplot(aes(x= predicted_category, fill=gender)) +
geom_bar(stat="count") +
labels(title = "aaa")
ds1 %>%
filter(!is.na(gender),!is.na(predicted_category)) %>%
ggplot(aes(x= predicted_category, fill=gender)) +
geom_bar(stat="count") +
ggtitle("aaa")
ds1 %>%
filter(!is.na(gender),!is.na(predicted_category)) %>%
ggplot(aes(x= predicted_category, fill=gender)) +
geom_bar(stat="count") +
ggtitle("aaa") +
theme(plot.title = element_text(hjust = 0.5))
str(ds1)
ds1 %>%
filter(!is.na(marital),!is.na(predicted_category)) %>%
ggplot(aes(x= predicted_category, fill=marital)) +
geom_bar(stat="count") +
ggtitle("Happy Moments within different Gender") +
theme(plot.title = element_text(hjust = 0.5))
ds1 %>%
filter(!is.na("marital"),!is.na(predicted_category)) %>%
ggplot(aes(x= predicted_category, fill="marital")) +
geom_bar(stat="count") +
ggtitle("Happy Moments within different Marital") +
theme(plot.title = element_text(hjust = 0.5))
ds1 %>%
filter(!is.na(marital),!is.na(predicted_category)) %>%
ggplot(aes(x= predicted_category, fill=marital)) +
geom_bar(stat="count") +
ggtitle("Happy Moments within different Marital") +
theme(plot.title = element_text(hjust = 0.5))
str(ds1)
ds1 %>%
filter(!is.na(parenthood),!is.na(predicted_category)) %>%
ggplot(aes(x= predicted_category, fill=parenthood)) +
geom_bar(stat="count") +
ggtitle("Happy Moments within different Parenthood") +
theme(plot.title = element_text(hjust = 0.5))
knitr::opts_chunk$set(echo = TRUE)
ds_main <- read.csv("../data/cleaned_hm.csv")
ds_de <- read.csv("../data/demographic.csv",na.strings=c(""))
library(dplyr)
library(tidyr)
ds_main <- read.csv("../data/cleaned_hm.csv")
ds_de <- read.csv("../data/demographic.csv",na.strings=c(""))
ds1 <- ds_main %>%
select(wid,predicted_category) %>%
full_join(.,ds_de)
str(ds1)
library(dplyr)
library(tidyr)
ds_main <- read.csv("../data/cleaned_hm.csv")
ds_de <- read.csv("../data/demographic.csv",na.strings=c(""))
ds1 <- ds_main %>%
select(wid,predicted_category) %>%
full_join(.,ds_de)
str(ds1)
ds1 <- ds_main %>%
select(wid,predicted_category) %>%
full_join(.,ds_de,by = "wid")
library(dplyr)
library(tidyr)
ds_main <- read.csv("../data/cleaned_hm.csv")
ds_de <- read.csv("../data/demographic.csv",na.strings=c(""))
ds1 <- ds_main %>%
select(wid,predicted_category) %>%
full_join(.,ds_de,by = "wid")
str(ds1)
